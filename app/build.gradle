plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.daggerHilt)
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
}

def APP_PREFIX = "openpay_app"

android {
    namespace 'com.jesusvilla.openpay'
    compileSdk 34

    defaultConfig {
        applicationId "com.jesusvilla.openpay"
        minSdk 21
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions = ["environment"]

    productFlavors {
        dev {
            dimension "environment"
        }
        qa {
            dimension "environment"
        }
        prod {
            dimension "environment"
        }
    }
    dynamicFeatures = []

    with flavorConfig

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig = true
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "${APP_PREFIX}_${variant.getFlavorName()}_v${defaultConfig.versionName}.apk"
        }
    }
}

dependencies {
    implementation project(path: ':base')
    implementation project(path: ':core')
    implementation project(path: ':profile')
    implementation project(path: ':movies')
    implementation project(path: ':location')
    implementation libs.androidx.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.junit
    androidTestImplementation libs.espresso.core

    //Testing
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui

    implementation libs.circle.imageview

    implementation(libs.retrofit.rxjava2)

    implementation libs.android.dagger.hilt
    kapt libs.android.dagger.hilt.compiler
    implementation libs.androidx.dagger.hilt.navigation.fragment
    implementation(libs.timber)
    implementation(libs.androidx.core.splashscreen)
    implementation libs.lottie

    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics

    implementation(libs.gms.play.services.location)
    implementation(libs.gms.play.services.maps)
    implementation(libs.maps.android)
    implementation libs.androidx.work.runtime.ktx

    implementation(libs.androidx.hilt.work)
    // When using Kotlin.
    kapt(libs.androidx.hilt.compiler)

    implementation libs.firebase.database.ktx

}